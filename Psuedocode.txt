FIND A REFERENCE FOR THIS
(one of the wiki references??)

    # Deep Q-Learning Algorithm
    #
    # Initialise replayActions (D)
    # Initialise action-value table Q with random weights
    #
    # observe initial state (s)
    #
    # repeat
    #   select an action (a)
    #       with a probability of G? select a random action (a)
    #       OR select
    #   do action (a)
    #   observe reward (r)
    #   observe new state (s')
    #   store <s, a, r, s'> in replayActions (D)
    #
    #   sample random transitions <ss, aa, rr, ss'> from replayActions (D)
    #   calculate target for each minibatch transition (tt)
    #       if ss' is terminal state then tt = rr
    #       otherwise tt = rr + ymax a' Q(ss', aa,)
    #   train the Q network using (tt - Q(ss, aa)) as loss
    #
    #   s=s'
    #
    # until terminated
